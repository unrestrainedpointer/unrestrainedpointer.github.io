<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Galois Theroy(1)</title>
    <link href="/2022/04/08/Galois-Theroy/"/>
    <url>/2022/04/08/Galois-Theroy/</url>
    
    <content type="html"><![CDATA[<ol><li><p>什么是对称？</p><p>为了获得这种艾多斯，我们从几个例子进行直观：</p><ul><li>正方形是对称的；</li><li>物理定律是对称的；</li><li>多项式方程根的加法和乘法的结果是对称的；</li></ul><p>对称就是“基于某种操作下的不变性”。</p><ol><li>正方形绕中心点旋转90度、180度、270度、360度是不变的，因此我们叫这种对称为中心对称。正方形沿对角线对折可以重合，这可以等价为正方形绕对角线旋转180度、360度是不变的。同样的绕着中垂线旋转正方形也是不变的。</li><li>从(i)中可知，正方形的三种对称的唯一区别就是三组操作不同：<code>&#123;“绕中心点旋转n* 90度”，“绕对角线旋转n* 180度”，“绕着中垂线旋转n* 180度”&#125;</code>对此我们可以进一步还原——将正方形换成长宽相等的十字架、圆等形状同等操作下的对称性仍然成立，根据胡塞尔的本质还原理论，我们可以进一步将形状从对称的本质领域剔除，因此还原得到的对称的本质就只剩下“操作”了。</li><li>根据(ii)中的结论，是“操作”使某一种对称成为了那种对称。在此基础上我们继续看物理定律的对称，物理定律从古到今是不变的，因此物理定律的对称是基于时间的对称。历史在现在及未来是不变的，因此历史基于现在及未来的时间是对称的；</li></ol></li><li><p>对称的数学表示</p><ul><li>我们要描述的是某一种对称的本质，根据(1)中的结论，我们要描述的就是某一种“操作”，那么接下来我们进一步对“操作”进行分析；</li><li>我们还是用一个例子进行直观，那(1)中的(ii)中集合的第一个元素“绕中心点旋转n* 90度”进行分析；</li><li>这个操作包含了两部分：一个动作“绕中心点旋转”+动作的量n*90度；</li><li>“绕中心点旋转”是共同部分，但由于剔除这部分会导致无法识别对称，因此我们要保留这部分语义，而第二部分由于涉及量，我们就可以定义运算；</li><li>于是我们得到这样一种表达：0表示绕中心点旋转0度，r表示绕中心点旋转90度，2r表示绕中心点旋转180度，3r表示270度递增，由此我们得到一个操作集合<code>G=&#123;0, r, 2r, 3r&#125;</code>并且我们发现当旋转270度后再旋转90度又相当于旋转了0度；</li><li>而基于这个集合可以发现不同操作的量之间是加法关系，因此定义的运算为抽象的加法；</li><li>同理我们还可以得到另一种操作集合<code>H=&#123;1, r, r^2, r^3&#125;</code>，那么基于这个集合操作的量之间的关系，我们定义抽象乘法操作；</li></ul></li><li><p>群的定义</p><ol><li><p>根据(2)的结论，对于对称的描述需要一个操作集合和一个基于这个集合的运算，我们把这两部分合起来用字母定义就得到了群；</p></li><li><p>假设操作集合用G表示，抽象运算用  ·表示，那么(G, ·)就表示一个对称；</p></li><li><p>由(2)知，这个对称还有如下性质：</p><ul><li>G中的任意两个元素做·运算得到的元素必还存在于G中——封闭性；</li><li>G中的三个元素做·运算满足结合律；</li><li>存在一个单位元e，它和任意元素做运算都会得到这个元素自身；</li><li>任何一个元素都存在逆元，即a·b&#x3D;e，a和b互为逆元；</li></ul></li><li><p>我们把满足上面四条的(G, ·)成为群；</p></li></ol></li><li><p>群的同构</p><ol><li>从(2)中对正方形中心对称的两种表达，即(G, +)和(H, *)开看，虽然集合的内容和定义的运算不同，但他们却有着相同的内涵——同一种结构的对称，可知这两个群是具有某种同一性的，我们称之为同构；</li></ol></li><li><p>多项式方程根的加法和乘法结果的对称</p><ul><li>我们那一元二次方程ax^2+bx+c&#x3D;0来就来举例，根据韦达定理我们知道x1+x2&#x3D;-b&#x2F;a, x1*x2&#x3D;c&#x2F;a;</li><li>由此我们得到了这个一元二次方程的根的加法和乘法在互换加数和乘数的情况下结果是不变的，即x2+x1&#x3D;x1+x2, x1<em>x2&#x3D;x2</em>x1；</li><li>并且我们还可以进一步排除方程具体性的影响，即换一个方程上面的等式还成立，由此我们就得到了一元二次方程加法和乘法结果的对称，这种对称的本质是“互换”操作；</li><li>我们把这个对称表达出来，就是<code>G=&#123;0, r&#125;</code>分别表示互换0次，互换1次，互换两次又回到了0次，因此定义的运算是加法，我们得到了一个群(G, +);</li><li>这个群就是著名的伽罗瓦群，关于伽罗瓦理论的提出和具体内容见下一篇；</li></ul></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>Mathematics</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2022/04/08/hello-world/"/>
    <url>/2022/04/08/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
